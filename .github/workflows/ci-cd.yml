name: CI/CD Workflow

on:
    # push:
    #     paths-ignore: 
    #         - 'kubernetes/**'
    
    workflow_dispatch:

jobs:
  Security_scan:
    runs-on: self-hosted
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # - name: Set up Trivy
      #   run: |
      #     sudo apt-get install wget apt-transport-https gnupg lsb-release
      #     wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
      #     echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
      #     sudo apt-get update
      #     sudo apt-get install trivy -y
      - name: Trivy filesystem Scan
        run: trivy fs --format table .
      # - name: GitLeaks Setup
      #   run: sudo apt install gitleaks -y
      - name: Gitleaks Scan
        run: gitleaks detect source . -f json

  Sonar_scan:
    runs-on: self-hosted
    needs: Security_scan
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5.1.0
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}
      # - name: Install jq
      #   run: sudo apt-get update && sudo apt-get install -y jq
      - name: SonarQube Quality Gate Check
        id: sonarqube-quality-gate-check
        uses: sonarsource/sonarqube-quality-gate-action@v1
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}

  Image_build:
    runs-on: self-hosted
    needs: Sonar_scan
    env:
          IMAGE_NAME: node-app
          IMAGE_TAG: latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker Setup Buildx
        uses: docker/setup-buildx-action@v3
      - name: Image Build and Push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      - name: Trivy image scan
        run: trivy image ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}

  K8s_Deploy:
    runs-on: self-hosted
    needs: Image_build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      # - name: Set KUBECONFIG
      #   run: |
      #     echo "${{ secrets.KUBECONFIG }}" > kubeconfig
      #     export KUBECONFIG
      - name: Deploy to k8s
        run: kubectl apply -f ./kubernetes/.